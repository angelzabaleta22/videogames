{"ast":null,"code":"import { GET_ALL_VIDEOGAMES, SET_LOADING, SET_CURRENT_PAGE, SORT_BY_SOURCE, SORT_BY_GENRE, ORDER_BY_NAME, SEARCH_GAME, ORDER_BY_RATING, GET_VIDEOGAME, GET_ALL_GENRES, GET_ALL_PLATFORMS, RESET_VIDEOGAME } from \"../actions/index\";\nconst initialState = {\n  videogames: [],\n  filtergames: [],\n  videogame: [],\n  genres: [],\n  platforms: [],\n  loading: false,\n  currentPage: 1,\n  videogamesPerPage: 15,\n  filterGenres: \"ALL\",\n  filterSource: \"ALL\"\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return {\n        ...state,\n        videogames: action.payload,\n        filtergames: action.payload,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload\n      };\n    case SORT_BY_SOURCE:\n      let resultSource = [];\n      switch (action.payload) {\n        case \"API\":\n          const filterApplyApi = state.videogames.filter(videogame => videogame.id.toString().length < 36);\n          if (state.filterGenres === \"ALL\" || state.filterGenres === -1) {\n            resultSource = filterApplyApi;\n          } else {\n            filterApplyApi.forEach(videogame => {\n              if (videogame.genres.filter(genre => genre.id === parseInt(state.filterGenres, 10)).length) {\n                resultSource.push(videogame);\n              }\n            });\n          }\n          return {\n            ...state,\n            filtergames: resultSource,\n            currentPage: 1,\n            filterSource: action.payload\n          };\n        case \"DB\":\n          const filterApplyDb = state.videogames.filter(videogame => videogame.id.toString().length === 36);\n          if (state.filterGenres === \"ALL\" || state.filterGenres === -1) {\n            resultSource = filterApplyDb;\n          } else {\n            filterApplyDb.forEach(videogame => {\n              if (videogame.genres.filter(genre => genre.id === parseInt(state.filterGenres, 10)).length) {\n                resultSource.push(videogame);\n              }\n            });\n          }\n          return {\n            ...state,\n            filtergames: resultSource,\n            currentPage: 1,\n            filterSource: action.payload\n          };\n        default:\n          if (state.filterGenres === \"ALL\" || state.filterGenres === -1) {\n            resultSource = state.videogames;\n          } else {\n            state.videogames.forEach(videogame => {\n              if (videogame.genres.filter(genre => genre.id === parseInt(state.filterGenres, 10)).length) {\n                resultSource.push(videogame);\n              }\n            });\n          }\n          return {\n            ...state,\n            filtergames: resultSource,\n            currentPage: 1,\n            filterSource: action.payload\n          };\n      }\n    case SORT_BY_GENRE:\n      let result = [];\n      switch (state.filterSource) {\n        case \"API\":\n          const filterApplyAPI = state.videogames.filter(videogame => videogame.id.toString().length < 36);\n          if (action.payload === \"ALL\" || action.payload === -1) {\n            result = filterApplyAPI;\n          } else {\n            filterApplyAPI.forEach(videogame => {\n              if (videogame.genres.filter(genre => genre.id === parseInt(action.payload, 10)).length) {\n                result.push(videogame);\n              }\n            });\n          }\n          return {\n            ...state,\n            filtergames: result,\n            currentPage: 1,\n            filterGenres: action.payload\n          };\n        case \"DB\":\n          const filterApplyDB = state.videogames.filter(videogame => videogame.id.toString().length === 36);\n          if (action.payload === \"ALL\" || action.payload === -1) {\n            result = filterApplyDB;\n          } else {\n            filterApplyDB.forEach(videogame => {\n              if (videogame.genres.filter(genre => genre.id === parseInt(action.payload, 10)).length) {\n                result.push(videogame);\n              }\n            });\n          }\n          return {\n            ...state,\n            filtergames: result,\n            currentPage: 1,\n            filterGenres: action.payload\n          };\n        default:\n          if (action.payload === \"ALL\" || action.payload === -1) {\n            result = state.videogames;\n          } else {\n            state.videogames.forEach(videogame => {\n              if (videogame.genres.filter(genre => genre.id === parseInt(action.payload, 10)).length) {\n                result.push(videogame);\n              }\n            });\n          }\n          return {\n            ...state,\n            filtergames: result,\n            currentPage: 1,\n            filterGenres: action.payload\n          };\n      }\n    //prettier-ignore\n    case ORDER_BY_NAME:\n      const ordergames = action.payload === \"asc\" ? state.filtergames.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (b.name > a.name) {\n          return -1;\n        }\n        return 0;\n      }) : state.filtergames.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (b.name > a.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        filtergames: ordergames,\n        currentPage: 1\n      };\n    case SEARCH_GAME:\n      return {\n        ...state,\n        filtergames: action.payload,\n        currentPage: 1,\n        loading: true\n      };\n    case ORDER_BY_RATING:\n      const orderGamesByRating = action.payload === \"min\" ? state.filtergames.sort(function (a, b) {\n        if (a.rating > b.rating) return 1;\n        if (b.rating > a.rating) return -1;\n        return 0;\n      }) : state.filtergames.sort(function (a, b) {\n        if (a.rating > b.rating) return -1;\n        if (b.rating > a.rating) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        filtergames: orderGamesByRating,\n        currentPage: 1\n      };\n    case GET_VIDEOGAME:\n      return {\n        ...state,\n        videogame: action.payload,\n        loading: true\n      };\n    case GET_ALL_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case GET_ALL_PLATFORMS:\n      return {\n        ...state,\n        platforms: action.payload\n      };\n    case RESET_VIDEOGAME:\n      {\n        return {\n          ...state,\n          videogame: []\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_VIDEOGAMES","SET_LOADING","SET_CURRENT_PAGE","SORT_BY_SOURCE","SORT_BY_GENRE","ORDER_BY_NAME","SEARCH_GAME","ORDER_BY_RATING","GET_VIDEOGAME","GET_ALL_GENRES","GET_ALL_PLATFORMS","RESET_VIDEOGAME","initialState","videogames","filtergames","videogame","genres","platforms","loading","currentPage","videogamesPerPage","filterGenres","filterSource","rootReducer","state","action","type","payload","resultSource","filterApplyApi","filter","id","toString","length","forEach","genre","parseInt","push","filterApplyDb","result","filterApplyAPI","filterApplyDB","ordergames","sort","a","b","name","orderGamesByRating","rating"],"sources":["C:/Users/angel/Desktop/Henry/Angel-Zabaleta-PI-Videogames/client/src/redux/reducer/index.js"],"sourcesContent":["import {\r\n  GET_ALL_VIDEOGAMES,\r\n  SET_LOADING,\r\n  SET_CURRENT_PAGE,\r\n  SORT_BY_SOURCE,\r\n  SORT_BY_GENRE,\r\n  ORDER_BY_NAME,\r\n  SEARCH_GAME,\r\n  ORDER_BY_RATING,\r\n  GET_VIDEOGAME,\r\n  GET_ALL_GENRES,\r\n  GET_ALL_PLATFORMS,\r\n  RESET_VIDEOGAME,\r\n} from \"../actions/index\";\r\nconst initialState = {\r\n  videogames: [],\r\n  filtergames: [],\r\n  videogame: [],\r\n  genres: [],\r\n  platforms: [],\r\n  loading: false,\r\n  currentPage: 1,\r\n  videogamesPerPage: 15,\r\n  filterGenres: \"ALL\",\r\n  filterSource: \"ALL\",\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_VIDEOGAMES:\r\n      return {\r\n        ...state,\r\n        videogames: action.payload,\r\n        filtergames: action.payload,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload,\r\n      };\r\n    case SORT_BY_SOURCE:\r\n      let resultSource = [];\r\n      switch (action.payload) {\r\n        case \"API\":\r\n          const filterApplyApi = state.videogames.filter(\r\n            (videogame) => videogame.id.toString().length < 36\r\n          );\r\n\r\n          if (state.filterGenres === \"ALL\" || state.filterGenres === -1) {\r\n            resultSource = filterApplyApi;\r\n          } else {\r\n            filterApplyApi.forEach((videogame) => {\r\n              if (\r\n                videogame.genres.filter(\r\n                  (genre) => genre.id === parseInt(state.filterGenres, 10)\r\n                ).length\r\n              ) {\r\n                resultSource.push(videogame);\r\n              }\r\n            });\r\n          }\r\n\r\n          return {\r\n            ...state,\r\n            filtergames: resultSource,\r\n            currentPage: 1,\r\n            filterSource: action.payload,\r\n          };\r\n        case \"DB\":\r\n          const filterApplyDb = state.videogames.filter(\r\n            (videogame) => videogame.id.toString().length === 36\r\n          );\r\n\r\n          if (state.filterGenres === \"ALL\" || state.filterGenres === -1) {\r\n            resultSource = filterApplyDb;\r\n          } else {\r\n            filterApplyDb.forEach((videogame) => {\r\n              if (\r\n                videogame.genres.filter(\r\n                  (genre) => genre.id === parseInt(state.filterGenres, 10)\r\n                ).length\r\n              ) {\r\n                resultSource.push(videogame);\r\n              }\r\n            });\r\n          }\r\n\r\n          return {\r\n            ...state,\r\n            filtergames: resultSource,\r\n            currentPage: 1,\r\n            filterSource: action.payload,\r\n          };\r\n        default:\r\n          if (state.filterGenres === \"ALL\" || state.filterGenres === -1) {\r\n            resultSource = state.videogames;\r\n          } else {\r\n            state.videogames.forEach((videogame) => {\r\n              if (\r\n                videogame.genres.filter(\r\n                  (genre) => genre.id === parseInt(state.filterGenres, 10)\r\n                ).length\r\n              ) {\r\n                resultSource.push(videogame);\r\n              }\r\n            });\r\n          }\r\n\r\n          return {\r\n            ...state,\r\n            filtergames: resultSource,\r\n            currentPage: 1,\r\n            filterSource: action.payload,\r\n          };\r\n      }\r\n    case SORT_BY_GENRE:\r\n      let result = [];\r\n\r\n      switch (state.filterSource) {\r\n        case \"API\":\r\n          const filterApplyAPI = state.videogames.filter(\r\n            (videogame) => videogame.id.toString().length < 36\r\n          );\r\n          if (action.payload === \"ALL\" || action.payload === -1) {\r\n            result = filterApplyAPI;\r\n          } else {\r\n            filterApplyAPI.forEach((videogame) => {\r\n              if (\r\n                videogame.genres.filter(\r\n                  (genre) => genre.id === parseInt(action.payload, 10)\r\n                ).length\r\n              ) {\r\n                result.push(videogame);\r\n              }\r\n            });\r\n          }\r\n          return {\r\n            ...state,\r\n            filtergames: result,\r\n            currentPage: 1,\r\n            filterGenres: action.payload,\r\n          };\r\n        case \"DB\":\r\n          const filterApplyDB = state.videogames.filter(\r\n            (videogame) => videogame.id.toString().length === 36\r\n          );\r\n          if (action.payload === \"ALL\" || action.payload === -1) {\r\n            result = filterApplyDB;\r\n          } else {\r\n            filterApplyDB.forEach((videogame) => {\r\n              if (\r\n                videogame.genres.filter(\r\n                  (genre) => genre.id === parseInt(action.payload, 10)\r\n                ).length\r\n              ) {\r\n                result.push(videogame);\r\n              }\r\n            });\r\n          }\r\n          return {\r\n            ...state,\r\n            filtergames: result,\r\n            currentPage: 1,\r\n            filterGenres: action.payload,\r\n          };\r\n        default:\r\n          if (action.payload === \"ALL\" || action.payload === -1) {\r\n            result = state.videogames;\r\n          } else {\r\n            state.videogames.forEach((videogame) => {\r\n              if (\r\n                videogame.genres.filter(\r\n                  (genre) => genre.id === parseInt(action.payload, 10)\r\n                ).length\r\n              ) {\r\n                result.push(videogame);\r\n              }\r\n            });\r\n          }\r\n          return {\r\n            ...state,\r\n            filtergames: result,\r\n            currentPage: 1,\r\n            filterGenres: action.payload,\r\n          };\r\n      }\r\n    //prettier-ignore\r\n    case ORDER_BY_NAME: const ordergames = action.payload === \"asc\" ? state.filtergames.sort(function (a, b) {\r\n              if (a.name > b.name) {\r\n                return 1;\r\n              }\r\n              if (b.name > a.name) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            })\r\n          : state.filtergames.sort(function (a, b) {\r\n              if (a.name > b.name) {\r\n                return -1;\r\n              }\r\n              if (b.name > a.name) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            });\r\n              return {\r\n                ...state,\r\n                filtergames: ordergames,\r\n                currentPage: 1,\r\n              };\r\n    case SEARCH_GAME:\r\n      return {\r\n        ...state,\r\n        filtergames: action.payload,\r\n        currentPage: 1,\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_BY_RATING:\r\n      const orderGamesByRating =\r\n        action.payload === \"min\"\r\n          ? state.filtergames.sort(function (a, b) {\r\n              if (a.rating > b.rating) return 1;\r\n              if (b.rating > a.rating) return -1;\r\n              return 0;\r\n            })\r\n          : state.filtergames.sort(function (a, b) {\r\n              if (a.rating > b.rating) return -1;\r\n              if (b.rating > a.rating) return 1;\r\n              return 0;\r\n            });\r\n      return {\r\n        ...state,\r\n        filtergames: orderGamesByRating,\r\n        currentPage: 1,\r\n      };\r\n\r\n    case GET_VIDEOGAME:\r\n      return {\r\n        ...state,\r\n        videogame: action.payload,\r\n        loading: true,\r\n      };\r\n    case GET_ALL_GENRES:\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n      };\r\n    case GET_ALL_PLATFORMS:\r\n      return {\r\n        ...state,\r\n        platforms: action.payload,\r\n      };\r\n    case RESET_VIDEOGAME: {\r\n      return {\r\n        ...state,\r\n        videogame: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}